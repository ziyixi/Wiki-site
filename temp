谈到我自己的未来职业规划，我这里有一些比较初步的想法。

首先的一个关键问题在于我今后应该从事学术界的工作还是工业界的工作，这一点非常重要。从我本科时候的经历来看，要想在每一个人生阶段结束的时候达到一个更好的位置，就应该提早做准备。（譬如我自己出国这件事情其实是在大三下学期才开始正式开始准备的，这一点无疑成为我申请时候的劣势）此外我们还应该明白在每一阶段自己的核心竞争力是什么。在 PhD 阶段，我个人认为还是要着眼于科研。第一点在于做了些什么东西，即所做工作的数量。内行毕竟是少数，别人评价自己都要从一些标准的评价手段来看。（主要是发了些什么文章，在什么样的期刊上发了文章。）其次是所做的领域。（是否代表了学科的发展方向，是否具有真正的价值。）最后是所做工作的延伸性。（如何为自己创造更多的机会。）

回顾我现在所做的事情，大约在今年结束之前能把模型计算出来，在明年暑假之前文章应该可以发表。我自己所做的另一个算法方面的工作，我预计是能发一篇比较小的 paper。所以在前两年（或者三年），我应该能有两篇一作文章到手。再加上蹭师兄的两篇二作文章，我在前两年就会有四篇文章。从文章数目来看，我觉得似乎还是可以的。但是考虑到自己学校的问题，MSU 毕竟不能为我找工作提供助力。如果我想在国内找工作的话，所能凭借的有如下几点：教育背景：科大毕业，海外 PhD。学科背景：理科专业，cs dual，HPC 相关。我个人觉得这些条件应该能让我达到各大企业的基本入门要求，所以从这一点来看找工业界的工作还是有一些机会的。

如果我要从事学术界的工作的话，首先一点在于学术界的内卷现象。虽然说如果自己有比较好的 publication 的话，还是比较有希望在 PhD 毕业的时候找到一个比较好的博后位置，以至于再走教职的常规路线。理论上讲我是能走这条路的，而且走这条路的各个时期所要做的事情都是可以预期的。可是走这条路的一个大问题在于竞争激烈。不用脑子想我也知道业界待遇和职位数额要远远大于学术界。从我的观点来看，不转行的一部分在于确实拥有着远大的学术理想。但是更多的我觉得是不能跳出自己的舒适区。而从我个人发展的角度来看，我或者从我个人的兴趣来看，我其实还是比较喜欢做一些基础性的 coding 工作的，而且经过一直以来对学术界和业界的对比来看，我觉得业界还是更能实现我个人价值的地方。

如果从事业界工作，什么能力是我需要具备的？

1. 基础知识。cs 本科很多东西我都是水水而过，我个人觉得还需要加强。此外现在做 cs 相关工作，还有很多知识需要加以补充，具体而言，我觉得有如下事情需要去做：

   1. 离散数学。Rosen_Discrete_Mathematics_and_Its_Applications_7th_Edition
   2. 算法。 算法导论
   3. C++。cpp 是编程的基本功，不是学学 py 或者 Julia 能够取代的。而且自然我应该重读一下 C++ primer。
   4. 操作系统。这一科我建议直接阅读 computer systems 一书。我觉得可以和计算机系统一课合并。
   5. 数据库。 直接学习 SQL 学习指南这一动物书。
   6. 计算机网络。 这一科其实我不是非常喜欢，暂且扔掉。
   7. 编译原理。 学习 engineering a compiler 一书。
   8. 综上所述，我一共需要阅读六本书。因为我之前有 cs 的基础，所以除了算法导论一书外我觉得其余的书都可以在一个月内读完。算法导论需要阅读两到三个月之间。

2. 进阶知识。我希望从事的方向是偏向机器学习的高性能计算方面的工作，比如设计 GPU 算法之类的活。我自认为我在这一方面是比较有学习优势的。这就要求我在机器学习和高性能计算方面两手抓。
   1. GPU 基础知识。我需要知道如何使用 GPU，也需要知道其底层的原理。甚至对于 tpu 的相关知识，我也应该加以学习。我觉得可以阅读 Programming massively parallel processors: A hands-on approach 一书。
   2. CUDA 编程。我希望熟练掌握 c++，py 和 Julia 的 CUDA 编程。暂且阅读 CUDA C programming 一书。
   3. 学习“系统研究背景：操作系统、移动计算、边缘计算、分布式系统、硬件等”。这个日后详谈。
   4. 学习数电与 FPGA。

Anyway，我需要每天确保一定的学习时间，以便在明年暑假实习的时候达到应有的 cs 科班水平。此外应当关注科大的微软亚洲研究院的教授，以便参加 MSRA 的暑假实习。
